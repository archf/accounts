---

# useful fallback when ansible_connection != ssh => (can't use rsync//synchronize)
- name: copy dotfiles to target host user account
  copy:
    src: "{{item['home']|default(users_defaults['home'])}}/{{local_user}}/{{item['dotfiles_dir']}}"
    dest: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/"
    owner: "{{item['name']}}"
    group: "{{usergroup['name']}}"
  with_items: "{{users|default(omit)|selectattr('dotfiles_dir','defined')|list}}"
  when:
    - ansible_env['USER'] == item['name']
    - (ansible_local_user == ansible_env['USER'] or ansible_local_user == local_user)
    - local_user in ansible_control_machine_users
  vars:
    local_user: "{{users_usermap.get((item['name'], item['name'])}}"

- name: copy .vim directory to target host user account
  copy:
    src: "{{item['home']|default(users_defaults['home'])}}/{{local_user}}/{{item['vim_dir']}}"
    dest: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/"
    owner: "{{item['name']}}"
    group: "{{usergroup['name']}}"
  with_items: "{{users|default(omit)|selectattr('vim_dir','defined')|list}}"
  when:
    - ansible_env['USER'] == item['name']
    - (ansible_local_user == ansible_env['USER'] or ansible_local_user == local_user)
    - local_user in ansible_control_machine_users
  vars:
    local_user: "{{users_usermap.get((item['name'], item['name'])}}"
