---

# useful fallback when ansible_connection != ssh => (can't use rsync//synchronize)
- name: copy dotfiles to target host user account
  copy:
    src: "{{item['home']|default(users_defaults['home'])}}/{{local_user}}/{{item['dotfiles_dir']}}"
    dest: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/"
    owner: "{{item['name']}}"
    group: "{{usergroup['name']}}"
  loop: "{{users|selectattr('dotfiles_dir','defined')|list}}"
  when:
    - ansible_facts['env']['USER'] == item['name']
    - a_local_user == ansible_facts['env']['USER'] or a_local_user == local_user
    - local_user in a_control_machine_users
  vars:
    local_user: "{{users_usermap.get(item['name'], item['name'])}}"

- name: copy .vim directory to target host user account
  copy:
    src: "{{item['home']|default(users_defaults['home'])}}/{{local_user}}/{{item['vim_dir']}}"
    dest: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/"
    owner: "{{item['name']}}"
    group: "{{usergroup['name']}}"
  loop: "{{users|selectattr('vim_dir','defined')|list}}"
  when:
    - ansible_facts['env']['USER'] == item['name']
    - a_local_user == ansible_facts['env']['USER'] or a_local_user == local_user
    - local_user in a_control_machine_users
  vars:
    local_user: "{{users_usermap.get(item['name'], item['name'])}}"
