---

- name: set '{{usergroup['name']}}' 'ssh_new_keys' fact (w/o expired keys)
  set_fact:
    ssh_new_keys: "{{ssh_managed_keys|difference(ssh_active_keys)|split_keynames}}"
  check_mode: True
  tags: always

################################
# generate new ssh keys
################################

# Prior to executing this task, we have moved existing keypairs to avoid
# ssh-keygen runtime error while attempting to overwrite a keyfile. Be
# careful moving this task around. We can safely do an union because we
# registered expired key *after* deletion of unmanaged keypairs. We are now
# sure to not recreate an expired keys that became also unmanaged.

# note: registered content on a check run '-C|--check' will be slightly wrong.

# ssh-keygen reminder:
#    -N new_passphrase
#    -q quiet
#    -f filename

  # FIXME: warning when undefined 'ssh_new_keys'
- name: generate new ssh keys
  command: ssh-keygen -q -N 'changeme' -f ~/.ssh/{{item.0.user}}.{{item.1}}
  become_user: "{{item.0.user}}"
  loop: lookup('subelements',  ssh_new_keys, ssh_domains)
  register: ssh_generated_keys
