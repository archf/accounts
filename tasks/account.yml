---

- name: set 'a_cm_user' var
  set_fact:
    # user invoking ansible on the control machine
    a_cm_user: "{{lookup('env', 'USER')}}"
  check_mode: True
  when: a_cm_user is not defined
  tags: always

- name: set 'users' var
  block:
    # configure your user
    - name: gather 'ansible_env' facts
      setup: gather_subset=!all

    - name: set 'users' from 'usergroup' - running from "accounts.yml" entrypoint
      set_fact:
        users: "{{usergroup['users']|selectattr('name', 'eq', ansible_facts['env']['USER'])|list}}"
      when:
        - usergroup is defined

    # fixme: set users searching recursively in usergroups
    - name: set 'users' from first 'usergroups' - running from 'account.yml' entrypoint
      set_fact:
        users: "{{usergroups[0]['users']|selectattr('name', 'eq', ansible_facts['env']['USER'])|list}}"
        usergroup:
          name: "{{usergroups[0]['name']}}"
      when:
        - usergroups is defined
        - usergroup is not defined

    - name: set 'users' (fallback) - running from 'account.yml' entrypoint
      set_fact:
        users:
          # this is set to remote_user (not affected by --user)
          # NOTE: requires fact gathering
          - name: "{{ansible_facts['env']['USER']}}"
            dotfiles_dir: "dotfiles"
            vim_dir: ".vim"
        usergroup:
            name: "{{ansible['facts['env']['USER']}}"

  when:
    - users is not defined
    # - ansible_connection != 'local'
  check_mode: True
  tags: always

- debug: var=hostvars
# - debug: var=users
# - debug: var=usergroups
# - debug: var=usergroup
- fail:

# Try installing 'ansible_domain' and 'id_rsa.pub' pub keys searching paths
# using 'first_found' lookups.
- include_tasks: ssh_install_pub_keys.yml
  when: ansible_connection != 'local'
  loop: "{{users}}"
  loop_control:
    loop_var: user
  vars:
    cm_user: "{{(ansible_facts['env']['USER'] == 'root') |ternary(a_cm_user, users_usermap.get(user['name'], user['name']))}}"

# ssh_config templating
# - include_tasks: ssh_config.yml

- include_tasks: account_dotfiles.yml
