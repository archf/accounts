---

- name: install {{unix_user['name']}} user 'domain' public ssh keys
  authorized_key:
    user: "{{unix_user['name']}}"
    key: "{{lookup('file', item)}}"
    exclusive: "{{users_exclusive_ssh_keys}}"
  with_first_found:
    - files:
        - "{{local_user}}.{{ansible_facts['domain']}}.pub"
        - "{{local_user}}.pub"
      paths:
        - "{{groups_dir}}/{{usergroup['name']}}/keys"
        - "{{unix_user['home']|default(users_defaults['home'])}}/{{local_user}}/.ssh"
      skip: true
  register: installed_domain_key
  when: ansible_facts['domain'] is defined
  vars:
    local_user: "{{a_local_user if users_noadmin else users_usermap.get(unix_user['name'], unix_user['name'])}}"

# if user has an account on the cm an keys are not exclusive, try to find
# id_rsa.pub key and install it.
- name: install {{unix_user['name']}} user id_rsa.pub ssh keys (if found)
  authorized_key:
    user: "{{unix_user['name']}}"
    key: "{{lookup('file', item)}}"
    exclusive: "{{users_exclusive_ssh_keys}}"
  with_first_found:
    - files: "id_rsa.pub"
      paths: "{{unix_user['home']|default(users_defaults['home'])}}/{{local_user}}/.ssh"
      skip: true
  when:
    - (not installed_domain_key is changed and users_exclusive_ssh_keys) or not users_exclusive_ssh_keys
  vars:
    local_user: "{{a_local_user if users_noadmin else users_usermap.get(unix_user['name'], unix_user['name'])}}"

- name: install {{unix_user['name']}} user list of authorized_keys
  authorized_key:
    user: "{{unix_user['name']}}"
    key: "{{lookup('file', keypath.strip())}}"
  loop: "{{unix_user['authorized_keys']}}"
  when:
    - item is defined
    - (not installed_domain_key is changed and users_exclusive_ssh_keys) or not users_exclusive_ssh_keys
  vars:
    key_dir: "{{groups_dir}}/{{usergroup['name']}}/keys"
    keypath: >-
      {%- if ((groups_dir ~ '/' ~ usergroup['name'] ~ '/keys/' ~ item)|exists) %}
      {{groups_dir}}/{{usergroup['name']}}/keys/{{item}}
      {% else %}
      {{groups_dir}}/keys/{{item}}
      {% endif -%}
