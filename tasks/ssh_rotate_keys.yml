---

################################
# removal of unmanaged ssh keys
################################

# ssh_unmanaged_keys: flat list of keys no longer required
- name: set '{{usergroup['name']}}' 'ssh_unmanaged_keysunmanaged'
  set_fact:
    # this reads as 'ssh_active_keys not in ssh_managed_keys'
    ssh_unmanaged_keys: "{{ssh_active_keys|difference(ssh_managed_keys)}}"

  # those are moved to old_keys dir just in case
- name: backup '{{usergroup['name']}}' 'ssh_unmanaged_keys' on control machine
  command: >
    mv {{groups_dir}}/{{usergroup['name']}}/keys/{{item}}.pub
      {{groups_dir}}/{{usergroup['name']}}/old_keys/
  loop: "{{ssh_unmanaged_keys|default(omit)}}"
  delegate_to: localhost
  # ignore missing
  ignore_errors: true
  run_once: true

- name: backup '{{usergroup['name']}}' users' 'ssh_unmanaged_keys' to ~/.ssh/old_keys on hosts
  command: mv ~/.ssh/{{item}}* ~/.ssh/old_keys/
  become_user: "{{item.split('.', 1)}}"
  loop: "{{ssh_unmanaged_keys|default(omit)}}"

####################
# ssh key rotation
####################

# result is returned in the 'files' list of dict
- name: register {{usergroup['name']}} 'ssh_expired_keys_raw' (keys older than {{users_ssh_key_max_age}})
  find:
    age: "{{users_ssh_key_max_age}}"
    paths: "{{groups_dir}}/{{usergroup['name']}}/keys"
    patterns: '*.pub'
  register: ssh_expired_keys_raw

# ssh_expired_keys: list of keys that needs to be rotated
- name: set {{usergroup['name']}} 'ssh_expired_keys' fact
  set_fact:
    ssh_expired_keys: "{{ssh_expired_keys_raw.files|map(attribute='path')|get_ssh_keylist}}"

  # those are moved to old_keys dir just in case
- name: move out {{usergroup['name']}} 'ssh_expired_keys' on control machine
  command: >
    mv {{groups_dir}}/{usergroup['name']}}/keys/{{item}}.pub
      {{groups_dir}}/{{usergroup['name']}}/old_keys/
  loop: "{{ssh_expired_keys|default(omit)}}"
  delegate_to: localhost
  # ignore missing
  ignore_errors: true
  run_once: true

- name: move out 'ssh_expired_key' to user's ~/.ssh/old_keys on hosts
  command: mv ~/.ssh/{{item}}* ~/.ssh/old_keys/
  become_user: "{{item.split('.', 1)}}"
  loop: "{{ssh_expired_keys|default(omit)}}"

- name: set {{usergroup['name']}} 'ssh_new_keys' fact (w/ expired keys)
  set_fact:
    ssh_new_keys: "{{ssh_managed_keys|difference(ssh_active_keys)|union(ssh_expired_keys)|split_keynames}}"
