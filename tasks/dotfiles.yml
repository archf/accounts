---

# included from multiples places, therefore content must remain in this task
# file
#
# As each user might have to install his previously generated ssh public key to
# the public git remote server before cloning or use https..

### option #1: git module and www access
- name: pull dotfiles repo with git module
  git:
    accept_hostkey: yes
    clone: yes
    recursive: yes
    repo: "{{item['dotfiles_repo']}}"
    dest: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/dotfiles"
  with_items: "{{users|default(omit)|selectattr('dotfiles_repo','defined')|list}}"

### option #2: push from CM when no www access
# Alternatively, if target has no www access or for whatever other reasons,
# you can than at least useful sync stuff from a dir on the control machine['']
#
## option: #2a: ssh is available
- include_tasks: dotfiles_rsync.yml
  when:
    - ansible_host != "localhost"
    - (ansible_connection is undefined or ansible_connection == "ssh" or ansible_connection == "smart")

## option: #2b: ssh is not available
- include_tasks: dotfiles_copy.yml
  when:
    - ansible_host != "localhost"
    - ansible_connection is defined and ansible_connection != "ssh"
    - ansible_connection is defined and ansible_connection != "smart"
    - ansible_connection is defined and ansible_connection != "lxd"

## option #3: using lxc file push for lxd connection
- include_tasks: dotfiles_copy_lxc.yml
  when: ansible_connection is defined and ansible_connection == "lxd"

- name: symlink users dotfiles (requires Makefile)
  make:
    # chdir: "{{item['home']|default(users_defaults['home'])}}/{{item['name']}}/dotfiles"
    chdir: "{{makefile_dir|dirname}}"
    target: "{{users_dotfiles_makefile_target|default(omit)}}"
  # become_user: "{{item['name']}}"
  with_items: "{{users|default(omit)|selectattr('dotfiles_dir','defined')|list}}"
  when:
    # disable cond while https://github.com/ansible/ansible/issues/30351
    # workaround: include this task file with 'static: no'
    # - makefile_dir|exists
    - item['name'] == ansible_env['USER']
  vars:
    makefile_dir: "{{ansible_env['HOME']}}/{{item['dotfiles_dir']}}/Makefile"
